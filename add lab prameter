import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(
    MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => ParameterProvider()),
      ],
      child: MyApp(),
    ),
  );
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: LabParameterScreen(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class LabParameterScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final provider = Provider.of<ParameterProvider>(context);

    return Scaffold(
      appBar: AppBar(
        title: Text('Select Lab/Parameter'),
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(8.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'Select lab where sample has been taken:',
                style: TextStyle(fontWeight: FontWeight.bold),
              ),
              Row(
                children: [
                  Radio(
                    value: 0,
                    groupValue: provider.selectionType,
                    onChanged: (value) => provider.setSelectionType(value!),
                  ),
                  Text('As per laboratory'),
                  Radio(
                    value: 1,
                    groupValue: provider.selectionType,
                    onChanged: (value) => provider.setSelectionType(value!),
                  ),
                  Text('As per parameters'),
                ],
              ),
              if (provider.selectionType == 0) ...[
                Text(
                  'Level:',
                  style: TextStyle(fontWeight: FontWeight.bold),
                ),
                DropdownButton<String>(
                  isExpanded: true,
                  value: provider.selectedLab,
                  items: provider.labs.map((lab) => DropdownMenuItem(
                    value: lab,
                    child: Text(lab),
                  )).toList(),
                  onChanged: (value) => provider.setSelectedLab(value!),
                ),
              ],
              Visibility(
                visible: provider.selectionType==0,
                child: Card(
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(15.0),
                  ),
                  elevation: 4,
                  margin: EdgeInsets.all(8.0),
                  child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          'Select Parameter Type:',
                          style: TextStyle(fontWeight: FontWeight.bold),
                        ),
                        DropdownButton<int>(
                          isExpanded: true,
                          value: provider.parameterType,
                          items: [
                            DropdownMenuItem(value: 0, child: Text('All Parameter')),
                            DropdownMenuItem(value: 1, child: Text('Chemical Parameter')),
                            DropdownMenuItem(value: 2, child: Text('Bacteriological Parameter')),
                          ],
                          onChanged: (value) => provider.setParameterType(value!),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
              Card(
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(15.0),
                ),
                elevation: 4,
                margin: EdgeInsets.all(8.0),
                child: Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        'Tests Available:',
                        style: TextStyle(fontWeight: FontWeight.bold, fontSize: 18),
                      ),
                      SizedBox(height: 10),
                      SingleChildScrollView(
                        scrollDirection: Axis.horizontal,
                        child: DataTable(
                          columns: const <DataColumn>[
                            DataColumn(label: Text('Sr. No.')),
                            DataColumn(label: Text('Test Name')),
                            DataColumn(label: Text('Test Price')),
                            DataColumn(label: Text('Select Test')),
                          ],
                          rows: List<DataRow>.generate(
                            provider.getParameters().length,
                                (index) => DataRow(
                              cells: <DataCell>[
                                DataCell(Text('${index + 1}')),
                                DataCell(Text(provider.getParameters()[index])),
                                DataCell(Text('0')),
                                DataCell(
                                  Checkbox(
                                    value: provider.cart.contains(provider.getParameters()[index]),
                                    onChanged: (bool? value) => provider.toggleCart(provider.getParameters()[index]),
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ),
                      ),
                      SizedBox(height: 20),
                      Text('Cart: ${provider.cart.join(', ')}'),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class ParameterProvider with ChangeNotifier {
  int selectionType = 0;
  int parameterType = 0;
  String selectedLab = 'Lab 1';

  List<String> labs = ['Lab 1', 'Lab 2', 'Lab 3'];
  List<String> allParameters = ['Chloride', 'Color', 'E. coli', 'Fluoride'];
  List<String> chemicalParameters = ['Chloride', 'Fluoride'];
  List<String> bacteriologicalParameters = ['E. coli'];
  List<String> cart = [];

  void setSelectionType(int value) {
    selectionType = value;
    notifyListeners();
  }

  void setParameterType(int value) {
    parameterType = value;
    notifyListeners();
  }

  void setSelectedLab(String lab) {
    selectedLab = lab;
    notifyListeners();
  }

  List<String> getParameters() {
    switch (parameterType) {
      case 1:
        return chemicalParameters;
      case 2:
        return bacteriologicalParameters;
      default:
        return allParameters;
    }
  }

  void toggleCart(String parameter) {
    if (cart.contains(parameter)) {
      cart.remove(parameter);
    } else {
      cart.add(parameter);
    }
    notifyListeners();
  }
}
